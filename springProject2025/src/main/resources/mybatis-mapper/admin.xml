<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
	<mapper namespace="com.example.springProject2025.mapper.AdminMapper">
		
		<!-- slide banner.xml(메인슬라이드) list-->
		<select id="selectSlideBannerList" parameterType="hashmap" resultType="com.example.springProject2025.model.Admin">
			SELECT *
			FROM MAIN_SLIDE_IMAGE
		</select>
		
		<!-- product banner.xml(제품) list-->
		<select id="selectProductBannerList" parameterType="hashmap" resultType="com.example.springProject2025.model.Admin">
			SELECT B.*, IMG_PATH
			FROM PRODUCT_BANNER_IMG B
			INNER JOIN PRODUCT_IMG P ON B.PRODUCT_NO = P.PRODUCT_NO			
		</select>
		
		<select id="selectRallyBannerList" parameterType="hashmap" resultType="com.example.springProject2025.model.Admin">
			SELECT R.*, I.IMG_PATH
			FROM RALLY R
			INNER JOIN RALLY_IMG I ON R.RALLY_NO = I.RALLY_NO		
		</select>
	
	<!-- slide banner 수정/저장-->
	<update id="updateBannerModify" parameterType="hashmap">
	    UPDATE MAIN_SLIDE_IMAGE
	    SET 
	        TITLE           = #{title, jdbcType=VARCHAR},
	        IMAGE_DIR       = #{imageDir, jdbcType=VARCHAR},
	        LINK_URL        = #{linkUrl, jdbcType=VARCHAR},
	        DISPLAY_ORDER   = #{displayOrder, jdbcType=NUMERIC},
	        USER_ID         = #{userId, jdbcType=VARCHAR},
	        CDATE           = SYSDATE
	        WHERE 
	        BANNER_ID       = #{bannerId, jdbcType=NUMERIC}
	</update>

	<!-- slide banner 삭제 -->
	<delete id="deleteSlideBanner" parameterType="hashmap">
		DELETE FROM MAIN_SLIDE_IMAGE
		WHERE BANNER_ID = #{bannerId}
	</delete>
	
	<!-- product banner 삭제 -->
	<delete id="deleteProductBanner" parameterType="hashmap">
		DELETE FROM PRODUCT_BANNER_IMG
		WHERE PBANNER_IMG_NO = #{pBannerImgNo}
	</delete>
	
	<!-- rally banner 삭제 -->
	<delete id="deleteRallyBanner" parameterType="hashmap">
		DELETE FROM RALLY
		WHERE RALLY_NO = #{rallyNo}
	</delete>
	
	<!-- slide banner 추가 -->
    <insert id="insertSlideBanner" parameterType="hashmap">
	    INSERT INTO MAIN_SLIDE_IMAGE
	    (BANNER_ID, TITLE, IMAGE_DIR, LINK_URL, DISPLAY_ORDER, USER_ID, CDATE)
	    VALUES (
	        BANNER_SEQ.NEXTVAL,
	        #{title, jdbcType=VARCHAR},
	        #{imageDir, jdbcType=VARCHAR},
	        #{linkUrl, jdbcType=VARCHAR},
	        NVL(#{displayOrder, jdbcType=NUMERIC}, 0),
	        #{userId, jdbcType=VARCHAR},
	        SYSDATE
	    )
	</insert>
	
	<!-- product banner 추가 -->
	<insert id="insertProductBanner" parameterType="hashmap">
	    INSERT INTO PRODUCT_BANNER_IMG (
	        PBANNER_IMG_NO,
	        TITLE,
	        PRODUCT_NO,
	        PRODUCT_IMG_NO,  IMAGE_DIR,       CDATE
	    ) VALUES (
	        PRODUCT_BANNER_SEQ.NEXTVAL,
	        
	        #{title, jdbcType=VARCHAR},
	        
	        #{productNo, jdbcType=NUMERIC}, 
	        
	        #{productImgNo, jdbcType=VARCHAR},
	        
	        NULL,
	        
	        SYSDATE
	    )
	</insert>
	
	<!-- rally banner 추가 -->
	<insert id="insertRallyBanner" parameterType="hashmap">
		INSERT INTO RALLY (
	        RALLY_NO,
	        RALLY_NAME,
	        RALLY_DATE,
	        APPLICATION_PERIOD,
	        PRICE,
	        PHONE,
	        TYPE,
	        HOST
	    )
	    VALUES (
	        RALLY_SEQ.NEXTVAL,
	        #{rallyName},
	        
	        TO_DATE(#{rallyDate}, 'YYYY-MM-DD'), 
	        
	        TO_DATE(#{applicationPeriod}, 'YYYY-MM-DD'), 
	        
	        #{price},
	        #{phone},
	        #{type},
	        #{host}
	    )
	</insert>




		<!-- 상품 문의내역 전체 개수 조회 -->
		<select id="selectInquiryListCount" parameterType="hashmap" resultType="int">
		    SELECT COUNT(*)
		    FROM PRODUCT_INQUIRY I
		    INNER JOIN USERS U ON I.USER_ID = U.USER_ID
		    <where>
		        <if test="keyword != null and keyword != ''">
		            AND (I.TITLE LIKE '%' || #{keyword} || '%' 
		            OR U.NAME LIKE '%' || #{keyword} || '%'
		            OR I.USER_ID LIKE '%' || #{keyword} || '%')
		        </if>
		        <if test="statusOption != null and statusOption != ''">
		            AND I.STATUS = #{statusOption}
		        </if>
		        <if test="startDate != null and startDate != ''">
		            AND I.CDATE >= TO_DATE(#{startDate}, 'YYYY-MM-DD')
		        </if>
		        <if test="endDate != null and endDate != ''">
		            AND I.CDATE &lt;= TO_DATE(#{endDate}, 'YYYY-MM-DD') + 0.99999
		        </if>
		    </where>
		</select>
		
		<!-- 상품 문의내역 리스트 불러오기 (페이징 적용) -->
		<select id="selectInquiryList" parameterType="hashmap" resultType="com.example.springProject2025.model.Admin">
		    SELECT *
		    FROM (
		        SELECT SUB.*, ROWNUM AS RN
		        FROM (
		            SELECT I.*, U.NAME
		            FROM PRODUCT_INQUIRY I
		            INNER JOIN USERS U ON I.USER_ID = U.USER_ID
		            <where>
		                <if test="keyword != null and keyword != ''">
		                    AND (I.TITLE LIKE '%' || #{keyword} || '%' 
		                    OR U.NAME LIKE '%' || #{keyword} || '%'
		                    OR I.USER_ID LIKE '%' || #{keyword} || '%')
		                </if>
		                <if test="statusOption != null and statusOption != ''">
		                    AND I.STATUS = #{statusOption}
		                </if>
		                <if test="startDate != null and startDate != ''">
		                    AND I.CDATE >= TO_DATE(#{startDate}, 'YYYY-MM-DD')
		                </if>
		                <if test="endDate != null and endDate != ''">
		                    AND I.CDATE &lt;= TO_DATE(#{endDate}, 'YYYY-MM-DD') + 0.99999
		                </if>
		            </where>
		            ORDER BY I.INQUIRY_NO DESC
		        ) SUB
		    ) 
		    WHERE RN > #{startIndex} AND RN &lt;= #{startIndex} + #{pageSize}
		</select>
		
		<!-- 상품 문의내역 상세보기 -->
		<select id="selectInquiry" parameterType="hashmap" resultType="com.example.springProject2025.model.Admin">
			SELECT I.*, U.NAME
			FROM PRODUCT_INQUIRY I
			INNER JOIN USERS U ON I.USER_ID = U.USER_ID
			WHERE INQUIRY_NO = #{inquiryNo}
		</select>
		
		<!-- 상품 문의내역 관리자 답변 등록/수정 -->
		<update id="updateInquiryAnswer" parameterType="hashmap">
			UPDATE PRODUCT_INQUIRY
			SET 
				ANSWER = #{answer},
				ANSWER_DATE = SYSDATE,
				STATUS = 'Y'
			WHERE 
				INQUIRY_NO = #{inquiryNo}
		</update>
		
		
		<!-- 주문 목록 개수 조회 -->
		<select id="selectOrdersListCount" parameterType="hashmap" resultType="int">
		    SELECT COUNT(*)
		    FROM ORDERS O
		    INNER JOIN USERS U ON O.USER_ID = U.USER_ID
		    <where>
		        <if test="keyword != null and keyword != ''">
		            AND (U.NAME LIKE '%' || #{keyword} || '%'
		            OR O.USER_ID LIKE '%' || #{keyword} || '%'
		            OR O.ORDER_NO LIKE '%' || #{keyword} || '%')
		        </if>
		        <if test="statusOption != null and statusOption != ''">
		            AND O.STATUS = #{statusOption}
		        </if>
		        <if test="startDate != null and startDate != ''">
		            AND O.CDATE >= TO_DATE(#{startDate}, 'YYYY-MM-DD')
		        </if>
		        <if test="endDate != null and endDate != ''">
		            AND O.CDATE &lt;= TO_DATE(#{endDate}, 'YYYY-MM-DD') + 0.99999
		        </if>
		        AND O.STATUS IN ('신규주문', '배송중', '배송완료')
		    </where>
		</select>
		
		<!-- 주문 목록 조회 (페이징 적용) -->
		<select id="selectOrdersList" parameterType="hashmap" resultType="com.example.springProject2025.model.Admin">
		    SELECT *
		    FROM (
		        SELECT SUB.*, ROWNUM AS RN
		        FROM (
		            SELECT O.ORDER_NO, O.USER_ID, U.NAME, O.PRODUCT_NO, O.QUANTITY,
		                   O.PAYMENT_AMOUNT, O.ADDR, O.PAYMENT_METHOD, O.STATUS,
		                   TO_CHAR(O.CDATE, 'YYYY-MM-DD') AS CDATE,
		                   TO_CHAR(O.UDATE, 'YYYY-MM-DD') AS UDATE,
		                   O.BECAUSE, O.ORDER_REQUEST
		            FROM ORDERS O
		            INNER JOIN USERS U ON O.USER_ID = U.USER_ID
		            <where>
		                <if test="keyword != null and keyword != ''">
		                    AND (U.NAME LIKE '%' || #{keyword} || '%'
		                    OR O.USER_ID LIKE '%' || #{keyword} || '%'
		                    OR O.ORDER_NO LIKE '%' || #{keyword} || '%'
		                    OR O.PRODUCT_NO LIKE '%' || #{keyword} || '%')
		                </if>
		                <if test="statusOption != null and statusOption != ''">
		                    AND O.STATUS = #{statusOption}
		                </if>
		                <if test="startDate != null and startDate != ''">
		                    AND O.CDATE >= TO_DATE(#{startDate}, 'YYYY-MM-DD')
		                </if>
		                <if test="endDate != null and endDate != ''">
		                    AND O.CDATE &lt;= TO_DATE(#{endDate}, 'YYYY-MM-DD') + 0.99999
		                </if>
		                AND O.STATUS IN ('신규주문', '배송중', '배송완료')
		            </where>
		            ORDER BY O.ORDER_NO DESC
		        ) SUB
		    )
		    WHERE RN > #{startIndex} AND RN &lt;= #{startIndex} + #{pageSize}
		</select>
		
		<!-- 주문 상태 업데이트 -->
		<update id="updateOrderStatus" parameterType="hashmap">
		    UPDATE ORDERS
		    SET STATUS = #{newStatus},
		        UDATE = SYSDATE
		    WHERE ORDER_NO = #{orderNo}
		</update>
		
		
		<!-- 회원 목록 개수 조회 -->
		<select id="selectUserListCount" parameterType="hashmap" resultType="int">
		    SELECT COUNT(*)
		    FROM USERS
		    <where>
		        <if test="keyword != null and keyword != ''">
		            <choose>
		                <when test="sortColumn == 'USER_ID'">
		                    AND USER_ID LIKE '%' || #{keyword} || '%'
		                </when>
		                <when test="sortColumn == 'NAME'">
		                    AND NAME LIKE '%' || #{keyword} || '%'
		                </when>
		                <when test="sortColumn == 'NICKNAME'">
		                    AND NICKNAME LIKE '%' || #{keyword} || '%'
		                </when>
		                <otherwise>
		                    AND (USER_ID LIKE '%' || #{keyword} || '%'
		                    OR NAME LIKE '%' || #{keyword} || '%'
		                    OR NICKNAME LIKE '%' || #{keyword} || '%')
		                </otherwise>
		            </choose>
		        </if>
		        <!-- statusOption 등 다른 필터가 있다면 여기에 추가 -->
		    </where>
		</select>
		
		<!-- 회원 목록 조회 (페이징, 검색, 정렬 적용) -->
		<select id="selectUserList" parameterType="hashmap" resultType="com.example.springProject2025.model.Admin">
		    SELECT *
		    FROM (
		        SELECT SUB.*, ROWNUM AS RN
		        FROM (
		            SELECT USER_ID, NAME, NICKNAME, EMAIL, TO_CHAR(CDATE, 'YYYY-MM-DD') AS CDATE
		            FROM USERS
		            <where>
		                <if test="keyword != null and keyword != ''">
		                    <choose>
		                        <when test="sortColumn == 'USER_ID'">
		                            AND USER_ID LIKE '%' || #{keyword} || '%'
		                        </when>
		                        <when test="sortColumn == 'NAME'">
		                            AND NAME LIKE '%' || #{keyword} || '%'
		                        </when>
		                        <when test="sortColumn == 'NICKNAME'">
		                            AND NICKNAME LIKE '%' || #{keyword} || '%'
		                        </when>
		                        <otherwise>
		                            AND (USER_ID LIKE '%' || #{keyword} || '%'
		                            OR NAME LIKE '%' || #{keyword} || '%'
		                            OR NICKNAME LIKE '%' || #{keyword} || '%')
		                        </otherwise>
		                    </choose>
		                </if>
		            </where>
		            <!-- 정렬 기준 -->
		            <if test="sortColumn != null and sortColumn != ''">
		                ORDER BY
		                <choose>
		                    <when test="sortColumn == 'USER_ID'">USER_ID ASC</when>
		                    <when test="sortColumn == 'NAME'">NAME ASC</when>
		                    <when test="sortColumn == 'NICKNAME'">NICKNAME ASC</when>
		                    <otherwise>CDATE DESC</otherwise> <!-- 기본 정렬 -->
		                </choose>
		            </if>
		            <if test="sortColumn == null or sortColumn == ''">
		                ORDER BY CDATE DESC
		            </if>
		        ) SUB
		    )
		    WHERE RN > #{startIndex} AND RN &lt;= #{startIndex} + #{pageSize}
		</select>
		
		<!-- 회원 상세 정보 조회 -->
		<select id="selectUserDetail" parameterType="hashmap" resultType="com.example.springProject2025.model.Admin">
		    SELECT USER_ID, PWD, NAME, NICKNAME, GENDER, EMAIL, ADDR, BIRTH, PHONE,
		           TO_CHAR(CDATE, 'YYYY-MM-DD HH24:MI:SS') AS CDATE,
		           TO_CHAR(UDATE, 'YYYY-MM-DD HH24:MI:SS') AS UDATE,
		           USERTYPE
		    FROM USERS
		    WHERE USER_ID = #{userId}
		</select>
		
		<!-- 회원 삭제 -->
		<delete id="deleteUser" parameterType="hashmap">
		    DELETE FROM USERS
		    WHERE USER_ID = #{userId}
		</delete>
	</mapper>
